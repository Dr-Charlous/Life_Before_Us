//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Input System/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Diplocaulus"",
            ""id"": ""41c58bd0-582f-4037-a50b-ae02690cc054"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""79865c3a-241e-4a27-8860-b3e39c514703"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""4e0332a8-4cec-4342-a3fb-46450826e58c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UI"",
                    ""type"": ""Button"",
                    ""id"": ""56bdda60-9dd3-4822-8ae5-204aa3db0226"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fishing"",
                    ""type"": ""Button"",
                    ""id"": ""ae53e0f4-bfe3-444a-b761-9a3627e2d4b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Collecting"",
                    ""type"": ""Button"",
                    ""id"": ""a2bd6d4b-2d2f-48f6-a8ba-7db594def1a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch Water"",
                    ""type"": ""Button"",
                    ""id"": ""00cc8041-28c1-404e-bc97-313e229dbdbd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Letters"",
                    ""id"": ""35a06ad6-abbe-44b7-9195-854abcf5fed4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""3f24064e-1b48-4537-8e86-79def926e16f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""71a46659-82d3-4e14-a36f-d205ea75eae6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""d574440f-4a0f-4d4a-aa91-4d0932dd3206"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""d4bb1340-3263-40a1-9002-386fe501725b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""1b7fe9b0-ac6b-458f-8801-657b0f1de0ed"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""460b2fd7-64e6-4766-b6f9-3ba3462029ae"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b259e190-af4d-4095-9ba2-42252ae0ccb8"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f914f2dd-3ae7-408b-929c-c83ac2b452aa"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5a3c1319-ba8a-443b-8beb-fe0c2d342559"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""bdeaa727-3bf8-415b-8d26-087773f80999"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""db57630f-b384-48e1-a629-7a4b1709ab4f"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b1bd3ff9-eb4e-4859-9793-762fba0c26e5"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c5951e13-555b-4e13-ab7d-8c2eb70899e4"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1c2d2437-b9e7-4667-bb8c-e80cddb0df90"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2b678473-e843-4695-9a58-7f47ab6edf64"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""326789f6-8249-4bc8-b51e-12e5aa4818dd"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f3b1944-d4b4-48eb-8126-2ddb9d37e9cc"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45c97f55-cdee-43f2-908d-be275e6b7166"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a0238be-1fa6-4d46-94c3-b106d850c204"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fishing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00972667-a7ea-4e1e-92a3-9ebcbeaf92cd"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fishing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""309bd9c8-196e-4deb-8878-a68b841faf8c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Collecting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e40c0f29-db84-46a0-939b-2e07065807fb"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Collecting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3fec2d9-dbe4-4fa6-8429-5766c08be2aa"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Water"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61c0fb67-2773-4138-9a0c-515e9e3a8c7f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Water"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Diplocaulus
        m_Diplocaulus = asset.FindActionMap("Diplocaulus", throwIfNotFound: true);
        m_Diplocaulus_Move = m_Diplocaulus.FindAction("Move", throwIfNotFound: true);
        m_Diplocaulus_Dash = m_Diplocaulus.FindAction("Dash", throwIfNotFound: true);
        m_Diplocaulus_UI = m_Diplocaulus.FindAction("UI", throwIfNotFound: true);
        m_Diplocaulus_Fishing = m_Diplocaulus.FindAction("Fishing", throwIfNotFound: true);
        m_Diplocaulus_Collecting = m_Diplocaulus.FindAction("Collecting", throwIfNotFound: true);
        m_Diplocaulus_SwitchWater = m_Diplocaulus.FindAction("Switch Water", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Diplocaulus
    private readonly InputActionMap m_Diplocaulus;
    private List<IDiplocaulusActions> m_DiplocaulusActionsCallbackInterfaces = new List<IDiplocaulusActions>();
    private readonly InputAction m_Diplocaulus_Move;
    private readonly InputAction m_Diplocaulus_Dash;
    private readonly InputAction m_Diplocaulus_UI;
    private readonly InputAction m_Diplocaulus_Fishing;
    private readonly InputAction m_Diplocaulus_Collecting;
    private readonly InputAction m_Diplocaulus_SwitchWater;
    public struct DiplocaulusActions
    {
        private @Controls m_Wrapper;
        public DiplocaulusActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Diplocaulus_Move;
        public InputAction @Dash => m_Wrapper.m_Diplocaulus_Dash;
        public InputAction @UI => m_Wrapper.m_Diplocaulus_UI;
        public InputAction @Fishing => m_Wrapper.m_Diplocaulus_Fishing;
        public InputAction @Collecting => m_Wrapper.m_Diplocaulus_Collecting;
        public InputAction @SwitchWater => m_Wrapper.m_Diplocaulus_SwitchWater;
        public InputActionMap Get() { return m_Wrapper.m_Diplocaulus; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DiplocaulusActions set) { return set.Get(); }
        public void AddCallbacks(IDiplocaulusActions instance)
        {
            if (instance == null || m_Wrapper.m_DiplocaulusActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DiplocaulusActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @UI.started += instance.OnUI;
            @UI.performed += instance.OnUI;
            @UI.canceled += instance.OnUI;
            @Fishing.started += instance.OnFishing;
            @Fishing.performed += instance.OnFishing;
            @Fishing.canceled += instance.OnFishing;
            @Collecting.started += instance.OnCollecting;
            @Collecting.performed += instance.OnCollecting;
            @Collecting.canceled += instance.OnCollecting;
            @SwitchWater.started += instance.OnSwitchWater;
            @SwitchWater.performed += instance.OnSwitchWater;
            @SwitchWater.canceled += instance.OnSwitchWater;
        }

        private void UnregisterCallbacks(IDiplocaulusActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @UI.started -= instance.OnUI;
            @UI.performed -= instance.OnUI;
            @UI.canceled -= instance.OnUI;
            @Fishing.started -= instance.OnFishing;
            @Fishing.performed -= instance.OnFishing;
            @Fishing.canceled -= instance.OnFishing;
            @Collecting.started -= instance.OnCollecting;
            @Collecting.performed -= instance.OnCollecting;
            @Collecting.canceled -= instance.OnCollecting;
            @SwitchWater.started -= instance.OnSwitchWater;
            @SwitchWater.performed -= instance.OnSwitchWater;
            @SwitchWater.canceled -= instance.OnSwitchWater;
        }

        public void RemoveCallbacks(IDiplocaulusActions instance)
        {
            if (m_Wrapper.m_DiplocaulusActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDiplocaulusActions instance)
        {
            foreach (var item in m_Wrapper.m_DiplocaulusActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DiplocaulusActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DiplocaulusActions @Diplocaulus => new DiplocaulusActions(this);
    public interface IDiplocaulusActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnUI(InputAction.CallbackContext context);
        void OnFishing(InputAction.CallbackContext context);
        void OnCollecting(InputAction.CallbackContext context);
        void OnSwitchWater(InputAction.CallbackContext context);
    }
}
