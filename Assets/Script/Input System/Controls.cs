//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Script/Input System/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Diplocaulus"",
            ""id"": ""41c58bd0-582f-4037-a50b-ae02690cc054"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""79865c3a-241e-4a27-8860-b3e39c514703"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Collect"",
                    ""type"": ""Button"",
                    ""id"": ""996653c3-6604-4efc-8391-82563ac7d45c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""e7b899ed-e7e5-4c49-aefd-100c97b5ff9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BabyStay"",
                    ""type"": ""Button"",
                    ""id"": ""81b4447d-b388-4d6b-bb41-7a63c461505f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BabyFollow"",
                    ""type"": ""Button"",
                    ""id"": ""9dffdc90-7497-4137-9971-85d40ad148f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BabyAction"",
                    ""type"": ""Button"",
                    ""id"": ""d991b565-7440-4f94-ae92-031e173a67c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BabyGet"",
                    ""type"": ""Button"",
                    ""id"": ""9ebad2a4-aac2-4113-9273-abdba6228523"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quest"",
                    ""type"": ""Button"",
                    ""id"": ""43f9132d-1846-4417-91fd-59a3dfde1e09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KidsKeyBoard"",
                    ""type"": ""Value"",
                    ""id"": ""4c599620-6b4c-4071-b737-ee6493834088"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""KidsGamePad"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f47340b6-d398-4759-836a-70669442b49f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Letters"",
                    ""id"": ""35a06ad6-abbe-44b7-9195-854abcf5fed4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""3f24064e-1b48-4537-8e86-79def926e16f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""71a46659-82d3-4e14-a36f-d205ea75eae6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""d574440f-4a0f-4d4a-aa91-4d0932dd3206"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""d4bb1340-3263-40a1-9002-386fe501725b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""bdeaa727-3bf8-415b-8d26-087773f80999"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""db57630f-b384-48e1-a629-7a4b1709ab4f"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b1bd3ff9-eb4e-4859-9793-762fba0c26e5"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c5951e13-555b-4e13-ab7d-8c2eb70899e4"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1c2d2437-b9e7-4667-bb8c-e80cddb0df90"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""da2cc704-261c-4465-ba8c-fdbec048cbf9"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Collect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e48e758a-6a1f-4a0a-846a-432eae36d7bf"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Collect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3fa4e34-047b-4458-80cc-274f07e6c453"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ce24382-9f10-4d5a-8453-a500f6b0a9d0"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a103ad76-6189-4367-8561-0d56810ced7a"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BabyStay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02fdc38d-178b-4f62-b1b4-2bd1b3bc6869"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BabyStay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""576d7317-89f6-4106-b176-963f05a84c41"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BabyFollow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d37802e1-7731-442c-971e-3c7fca2eff50"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BabyFollow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19b03893-6319-4a33-a9c6-a87c3684cab7"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BabyAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01e2fc1f-4a09-4923-831e-22f9f4c0ca7d"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BabyAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad3b2bc2-8c7e-47d5-aaf5-5627a9a85612"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BabyGet"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f12583a7-4728-4a82-8cdb-47ef32ad0562"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BabyGet"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e9d5bc7-e85d-4860-b445-561df7672c22"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f5779a1-db05-4db4-b19b-5dd9cf244611"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D"",
                    ""id"": ""933e5297-d919-480b-b3a6-f2a55864e741"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KidsKeyBoard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a6b2fb96-d919-4f30-a3f0-de1990d27257"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KidsKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d5473c3a-06ba-4ed2-a681-a8cacb4d4bd9"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KidsKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""15dca548-7f28-4d91-893a-80f48b2961b0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KidsGamePad"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""62934ccd-c9d1-402a-98b4-0d064f0b2614"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KidsGamePad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""4f9a8370-26b9-4a2d-b961-b687347da50e"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KidsGamePad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""77e61859-e83b-4be7-a785-c64d1ddd5db2"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KidsGamePad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""5d4ab1a6-7384-4762-8087-9c7f3eccdea4"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KidsGamePad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Diplocaulus
        m_Diplocaulus = asset.FindActionMap("Diplocaulus", throwIfNotFound: true);
        m_Diplocaulus_Move = m_Diplocaulus.FindAction("Move", throwIfNotFound: true);
        m_Diplocaulus_Collect = m_Diplocaulus.FindAction("Collect", throwIfNotFound: true);
        m_Diplocaulus_Dash = m_Diplocaulus.FindAction("Dash", throwIfNotFound: true);
        m_Diplocaulus_BabyStay = m_Diplocaulus.FindAction("BabyStay", throwIfNotFound: true);
        m_Diplocaulus_BabyFollow = m_Diplocaulus.FindAction("BabyFollow", throwIfNotFound: true);
        m_Diplocaulus_BabyAction = m_Diplocaulus.FindAction("BabyAction", throwIfNotFound: true);
        m_Diplocaulus_BabyGet = m_Diplocaulus.FindAction("BabyGet", throwIfNotFound: true);
        m_Diplocaulus_Quest = m_Diplocaulus.FindAction("Quest", throwIfNotFound: true);
        m_Diplocaulus_KidsKeyBoard = m_Diplocaulus.FindAction("KidsKeyBoard", throwIfNotFound: true);
        m_Diplocaulus_KidsGamePad = m_Diplocaulus.FindAction("KidsGamePad", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Diplocaulus
    private readonly InputActionMap m_Diplocaulus;
    private List<IDiplocaulusActions> m_DiplocaulusActionsCallbackInterfaces = new List<IDiplocaulusActions>();
    private readonly InputAction m_Diplocaulus_Move;
    private readonly InputAction m_Diplocaulus_Collect;
    private readonly InputAction m_Diplocaulus_Dash;
    private readonly InputAction m_Diplocaulus_BabyStay;
    private readonly InputAction m_Diplocaulus_BabyFollow;
    private readonly InputAction m_Diplocaulus_BabyAction;
    private readonly InputAction m_Diplocaulus_BabyGet;
    private readonly InputAction m_Diplocaulus_Quest;
    private readonly InputAction m_Diplocaulus_KidsKeyBoard;
    private readonly InputAction m_Diplocaulus_KidsGamePad;
    public struct DiplocaulusActions
    {
        private @Controls m_Wrapper;
        public DiplocaulusActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Diplocaulus_Move;
        public InputAction @Collect => m_Wrapper.m_Diplocaulus_Collect;
        public InputAction @Dash => m_Wrapper.m_Diplocaulus_Dash;
        public InputAction @BabyStay => m_Wrapper.m_Diplocaulus_BabyStay;
        public InputAction @BabyFollow => m_Wrapper.m_Diplocaulus_BabyFollow;
        public InputAction @BabyAction => m_Wrapper.m_Diplocaulus_BabyAction;
        public InputAction @BabyGet => m_Wrapper.m_Diplocaulus_BabyGet;
        public InputAction @Quest => m_Wrapper.m_Diplocaulus_Quest;
        public InputAction @KidsKeyBoard => m_Wrapper.m_Diplocaulus_KidsKeyBoard;
        public InputAction @KidsGamePad => m_Wrapper.m_Diplocaulus_KidsGamePad;
        public InputActionMap Get() { return m_Wrapper.m_Diplocaulus; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DiplocaulusActions set) { return set.Get(); }
        public void AddCallbacks(IDiplocaulusActions instance)
        {
            if (instance == null || m_Wrapper.m_DiplocaulusActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DiplocaulusActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Collect.started += instance.OnCollect;
            @Collect.performed += instance.OnCollect;
            @Collect.canceled += instance.OnCollect;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @BabyStay.started += instance.OnBabyStay;
            @BabyStay.performed += instance.OnBabyStay;
            @BabyStay.canceled += instance.OnBabyStay;
            @BabyFollow.started += instance.OnBabyFollow;
            @BabyFollow.performed += instance.OnBabyFollow;
            @BabyFollow.canceled += instance.OnBabyFollow;
            @BabyAction.started += instance.OnBabyAction;
            @BabyAction.performed += instance.OnBabyAction;
            @BabyAction.canceled += instance.OnBabyAction;
            @BabyGet.started += instance.OnBabyGet;
            @BabyGet.performed += instance.OnBabyGet;
            @BabyGet.canceled += instance.OnBabyGet;
            @Quest.started += instance.OnQuest;
            @Quest.performed += instance.OnQuest;
            @Quest.canceled += instance.OnQuest;
            @KidsKeyBoard.started += instance.OnKidsKeyBoard;
            @KidsKeyBoard.performed += instance.OnKidsKeyBoard;
            @KidsKeyBoard.canceled += instance.OnKidsKeyBoard;
            @KidsGamePad.started += instance.OnKidsGamePad;
            @KidsGamePad.performed += instance.OnKidsGamePad;
            @KidsGamePad.canceled += instance.OnKidsGamePad;
        }

        private void UnregisterCallbacks(IDiplocaulusActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Collect.started -= instance.OnCollect;
            @Collect.performed -= instance.OnCollect;
            @Collect.canceled -= instance.OnCollect;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @BabyStay.started -= instance.OnBabyStay;
            @BabyStay.performed -= instance.OnBabyStay;
            @BabyStay.canceled -= instance.OnBabyStay;
            @BabyFollow.started -= instance.OnBabyFollow;
            @BabyFollow.performed -= instance.OnBabyFollow;
            @BabyFollow.canceled -= instance.OnBabyFollow;
            @BabyAction.started -= instance.OnBabyAction;
            @BabyAction.performed -= instance.OnBabyAction;
            @BabyAction.canceled -= instance.OnBabyAction;
            @BabyGet.started -= instance.OnBabyGet;
            @BabyGet.performed -= instance.OnBabyGet;
            @BabyGet.canceled -= instance.OnBabyGet;
            @Quest.started -= instance.OnQuest;
            @Quest.performed -= instance.OnQuest;
            @Quest.canceled -= instance.OnQuest;
            @KidsKeyBoard.started -= instance.OnKidsKeyBoard;
            @KidsKeyBoard.performed -= instance.OnKidsKeyBoard;
            @KidsKeyBoard.canceled -= instance.OnKidsKeyBoard;
            @KidsGamePad.started -= instance.OnKidsGamePad;
            @KidsGamePad.performed -= instance.OnKidsGamePad;
            @KidsGamePad.canceled -= instance.OnKidsGamePad;
        }

        public void RemoveCallbacks(IDiplocaulusActions instance)
        {
            if (m_Wrapper.m_DiplocaulusActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDiplocaulusActions instance)
        {
            foreach (var item in m_Wrapper.m_DiplocaulusActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DiplocaulusActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DiplocaulusActions @Diplocaulus => new DiplocaulusActions(this);
    public interface IDiplocaulusActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnCollect(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnBabyStay(InputAction.CallbackContext context);
        void OnBabyFollow(InputAction.CallbackContext context);
        void OnBabyAction(InputAction.CallbackContext context);
        void OnBabyGet(InputAction.CallbackContext context);
        void OnQuest(InputAction.CallbackContext context);
        void OnKidsKeyBoard(InputAction.CallbackContext context);
        void OnKidsGamePad(InputAction.CallbackContext context);
    }
}
